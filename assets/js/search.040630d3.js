(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{285:function(t,i,h){"use strict";h.r(i),i.default=[{title:"徐帆",path:"/posts/1.index.html",strippedContent:"module.exports = {    base: '/', //部署站点的基础路径，如果你想让你的网站部署到一个子路径下，你将需要设置它。如 Github pages，如果你想将你的网站部署到 https://foo.github.io/bar/，那么 base 应该被设置成 \"/bar/\"，它的值应当总是以斜杠开始，并以斜杠结束。    dest: './dist',    title: '徐帆',    description:      '啦啦啦啦啦', //网站的描述，它将会以 <meta> 标签渲染到当前页面的 HTML 中,还显示在首页的文章列表上面    head: [      [        'link',        {          rel: 'shortcut icon',          href: '/favicon.ico'        }      ]    ],    theme: 'indigo-material',    locales: {      '/': {        lang: 'zh-CN',        title: '徐帆',        description:          '啦啦啦啦啦'      }    },    markdown: {      lineNumbers: true //是否开启文章代码左边的行号显示    },    themeConfig: {      placeholder: '搜搜看', //搜索框的默认文章      searchReply: '什么都没搜到，试一下其它搜索词~',      author: '徐帆', //侧边栏的设置      email: '2271200774@qq.com',      pagination: '5', //每一页显示的文章个数      avatar: '/10.jpg', //头像地址      brand: '/bj.jpg', //头像背景图片地址      github: 'https://github.com/juejiechen', //点击github跳转的地址      vssue: {        //评论的配置,        need: false, //是否需要评论        option: {          //公共的Vssue配置          owner: '', //用户名          repo: '', //仓库名          locale: 'zh'        },        development: {          //开发环境下的配置          clientId: '',          clientSecret: ''        },        production: {          //生产环境的配置          clientId: '',          clientSecret: ''        }      },      menus: {        //侧边栏的文字        tags: '标签分类',        home: '主页',        all: '时间归档',        github: 'Github',        about: '自我介绍'      }    }  };"},{title:"HTML",path:"/posts/2.html.html",strippedContent:'## html标签    > 块级标签  >  > 会自动换行的叫做块级标签  >  > 行级标签  >  > 在同一行显示的叫做行级标签    ### 标题标签    ```html  <h1>标题</h1>  <h2>标题</h2>  <h3>标题</h3>  <h4>标题</h4>  <h5>标题</h5>  <h6 align="center">标题</h6>  ```    1  2  3  4  5  6    | 属性名 |         值          |   备注   |  | :----: | :-----------------: | :------: |  | align  | left、center、right | 对齐方式 |    ------    ### [#](https://liujiaozhu666.github.io/posts/html.html#段落标签) 段落标签    ```html  <p align="center">  \t飞雪连天射白鹿,笑书神侠倚碧鸳。  </p>  <p align="right">  \t飞雪连天射白鹿,笑书神侠倚碧鸳。  </p>  ```    1  2  3  4  5  6    | 属性名 |         值          |   备注   |  | :----: | :-----------------: | :------: |  | align  | left、center、right | 对齐方式 |    ------    ### [#](https://liujiaozhu666.github.io/posts/html.html#水平线标签) 水平线标签    ```html  <hr />  ```    1    | 属性名  |   值    |   备注   |  | :-----: | :-----: | :------: |  |  width  |  数字   | 线的宽度 |  | height  |  数字   | 线的高度 |  |  color  | 字符串  |   颜色   |  | noshade | noshade | 取消阴影 |    ------    ### [#](https://liujiaozhu666.github.io/posts/html.html#超链接标签) 超链接标签    ```html  <a href="地址">超链接</a>  ```    1    |  属性  |      值       |      备注      |  | :----: | :-----------: | :------------: |  |  href  | 网址/本地路径 |    跳转地址    |  | target |    _blank     | 新窗口打开页面 |    ------    ### [#](https://liujiaozhu666.github.io/posts/html.html#图片标签) 图片标签    ```html  <img src="路径" alt="文字" />  ```    1    |  属性  |                    值                    |            备注            |  | :----: | :--------------------------------------: | :------------------------: |  |  src   |            网络地址/本地路径             |          图片地址          |  |  alt   |                  字符串                  | 图片无法显示时，提示的文字 |  | title  |                  字符串                  |   鼠标停留时,提示的文字    |  | border |                   数字                   |           边框线           |  | align  | top、left、right、center、middle、bottom | 图文混排时 图文的显示方式  |    ------    ### [#](https://liujiaozhu666.github.io/posts/html.html#列表标签) 列表标签    #### [#](https://liujiaozhu666.github.io/posts/html.html#无序列表) 无序列表    ul 无序列表标签    li 列表项    ```html  <ul type="square">  \t<li>无序列表</li>  \t<li>无序列表</li>  \t<li>无序列表</li>  </ul>  ```    1  2  3  4  5    | 属性名 |             值             |   备注   |  | :----: | :------------------------: | :------: |  |  type  | disc(默认)、square、circle | 列表类型 |    ------    #### [#](https://liujiaozhu666.github.io/posts/html.html#有序列表) 有序列表    ol 有序列表标签    li 列表项    ```html  <ol type="a">  \t<li>有序列表</li>  \t<li>有序列表</li>  \t<li>有序列表</li>  </ol>  ```    1  2  3  4  5    | 属性名 |         值          |     备注     |  | :----: | :-----------------: | :----------: |  |  type  | 1(默认)、A、a、i、I | 列表符号类型 |    #### [#](https://liujiaozhu666.github.io/posts/html.html#自定义列表-描述) 自定义列表(描述)    dl 自定义列表    dt 自定义列表的标题    dd 列表项    ```html  <dl>  \t<dt>自定义标题</dt>  \t<dd>自定义列表</dd>  \t<dd>自定义列表</dd>  </dl>  ```    1  2  3  4  5    #### [#](https://liujiaozhu666.github.io/posts/html.html#列表使用场景) 列表使用场景    1. 导航栏  2. 网页布局  3. 轮播图  4. 标签页    ------    ### [#](https://liujiaozhu666.github.io/posts/html.html#div-和-span-标签) div 和 span 标签    #### [#](https://liujiaozhu666.github.io/posts/html.html#div) div     块级元素    #### [#](https://liujiaozhu666.github.io/posts/html.html#span) span     行级元素    ------    ### [#](https://liujiaozhu666.github.io/posts/html.html#表格标签) 表格标签    #### [#](https://liujiaozhu666.github.io/posts/html.html#规则表格) 规则表格    thead 表头 一般不写    tbody 表体 一般不写 但是浏览器会自动生成    tfoot 表尾 一般不写    caption 表格的标题    table 表格    tr 行    td 列    th 是表头 仅限于在表格的第一行 有字体加粗 水平居中效果    ```html  <table          width="100%"          cellspacing="0"          cellpadding="0"          border="1"          bgcolor="#F0F"         background="图片路径"         >  \t<caption>标题</caption>      <thead>      \t<tr>      \t\t<th>表头单元格1</th>          \t<th>表头单元格2</th>     \t\t</tr>      </thead>      <tbody>      \t<tr>          \t<td>单元格1</td>              <td>单元格2</td>          </tr>      </tbody>      <tfoot>      \t<tr>          \t<td>单元格1</td>              <td>单元格2</td>          </tr>      </tfoot>  </table>  ```    1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28    |   属性名    |         值          |                备注                |  | :---------: | :-----------------: | :--------------------------------: |  |    width    |     数字/百分比     |           设置表格的宽度           |  |   height    |        数字         |           设置表格的高度           |  |   border    |        数字         |           设置表格的边框           |  | cellspacing |        数字         | 设置单元格与单元格之间的间隙(填充) |  | cellpadding |        数字         | 设置单元格与单元格内容的间隙(填充) |  |   bgcolor   |        颜色         |           设置表格背景色           |  | background  |        路径         |           设置表格背景图           |  |    align    | left、center、right |        设置表格水平对齐方式        |  |   valign    | top、middle、bottom |        设置表格垂直对齐方式        |    #### [#](https://liujiaozhu666.github.io/posts/html.html#不规则表格) 不规则表格     要合并的 td 在同一个tr中 叫 列合并 （colspan）     要合并的 td 不在同一个tr中叫行合并 （rowspan）    #### [#](https://liujiaozhu666.github.io/posts/html.html#表格使用场景) 表格使用场景    1. 网页布局(老项目)  2. 展示数据    #### [#](https://liujiaozhu666.github.io/posts/html.html#练习题) 练习题    1. 使用规则表格制作班级信息统计表  2. 使用不规则表格制作个人简历    ### [#](https://liujiaozhu666.github.io/posts/html.html#form表单) form表单    #### [#](https://liujiaozhu666.github.io/posts/html.html#什么是表单) 什么是表单    比如 去银行办理业务需要填写表格    表单就是为了收集用户的信息    ```html  属性 :  action : 数据要提交的页面  method：数据提交的方式  默认是 get  get 和 post 有什么区别?  get 是不安全的 提交的数据量小   post 安全的 数据量没有限制的  ```    1  2  3  4  5  6    #### [#](https://liujiaozhu666.github.io/posts/html.html#input标签) input标签    ```html  \x3c!-- 所有内容都必须在 form 标签内 --\x3e  <form>   \t<input type="password" name="password" placeholder="提示信息" required />  \t<input type="number" name="age" placeholder="年龄" min="0" max="100" step="1" />  </form>  ```    1  2  3  4  5    oninvalid="setCustomValidity(\' 内容不符合时 提示的信息 \')" oninput="setCustomValidity(\'\')"    |    属性     |    值    |                  备注                  |  | :---------: | :------: | :------------------------------------: |  | placeholder |  字符串  |                提示信息                |  |    type     |   text   |                 文本框                 |  |    type     | password |               密码输入框               |  |    type     |  radio   |        单选按钮(name取值要一致)        |  |    type     | checkbox |                 复选框                 |  |    type     |  submit  |                提交按钮                |  |    type     |  reset   |                重置按钮                |  |    type     |  button  |                普通按钮                |  |    type     |  image   |         (src="路径") 图片按钮          |  |    type     |   file   |                 文件域                 |  |    type     |  range   |                 滑动块                 |  |    type     |   date   |                日期时间                |  |    type     |  email   |                邮箱验证                |  |    type     |   url    |                网址验证                |  |    type     |  number  |                验证数字                |  |   checked   | checked  |     默认被选中（单选和复选有作用）     |  |  maxlength  |   数字   |                最大长度                |  |    size     |   数字   |              输入框的大小              |  |  readonly   | readonly | 只读模式（可以获得焦点，数据可以提交） |  |  disabled   | disabled | 禁用模式（不能获得焦点，数据无法提交） |  |    value    |  字符串  |            给input设置内容             |  |  required   | required |                 必填项                 |  |     max     |   数字   |              最大取值范围              |  |     min     |   数字   |                最小范围                |  |    step     |   数字   |        步长 （加 或 减的数字）         |    #### [#](https://liujiaozhu666.github.io/posts/html.html#下拉框（下拉菜单）) 下拉框（下拉菜单）    ```html  <select name="mySelect" multiple>  \t<option value="选项1">选项1</option>  \t<option value="选项2">选项2</option>  </select>  ```    1  2  3  4    |   属性   |    值    |    备注    |  | :------: | :------: | :--------: |  | multiple | multiple |  实现多选  |  |  value   |  字符串  | 实际选项值 |  | selected | selected |   默认值   |    #### [#](https://liujiaozhu666.github.io/posts/html.html#多行文本输入框) 多行文本输入框    ```html  <textarea cols="5" rows="5"></textarea>  ```    1    | 属性  |   值   |        备注        |  | :---: | :----: | :----------------: |  | cols  |  数字  | 设置多行文本框的列 |  | rows  |  数字  | 设置多行文本框的行 |  | value | 字符串 |    多行文本框的    |    ------    ### [#](https://liujiaozhu666.github.io/posts/html.html#frameset框架) frameset框架    ```html  <frameset cols="30%,*">  \t<frame />  \t<frame />  </frameset>  ```    1  2  3  4    | 属性        | 值       | 备注               |  | ----------- | -------- | ------------------ |  | cols        | 百分比   | 设置有几列         |  | rows        | 百分比   | 设置有几行         |  | frameborder | 数字     | 设置边框线         |  | noresize    | noresize | 是否可以拖动边框线 |'},{title:"CSS",path:"/posts/3.css.html",strippedContent:'# CSS    ## 什么是CSS     CSS 是 Cascading Style Sheet     层叠样式表    作用: 美化网页 比如 加字体颜色 字体样式 背景图     css的优点     丰富的修饰样式     内容与修饰分离，利于项目开发     实现样式复用，提高开发效率     实现页面的精确控制    # CSS基本语法  选择器{     属性1：属性值1;     属性2：属性值2；     属性3：属性值3;     .......    }    添加注释的作用就是为了提高代码的 可读性    ## CSS基本语法    选择器{     属性1：属性值1;     属性2：属性值2；     属性3：属性值3;     .......    }    添加注释的作用就是为了提高代码的 可读性    ------    ## [#](https://liujiaozhu666.github.io/posts/CSS.html#样式的三种书写方式) 样式的三种书写方式    1. 外部引入样式表       ```html     <link rel="stylesheet" href="css文件路径" />     or     <style>         导入 外部样式表     \t@import url("css/index.css");     </style>     ```       1     2     3     4     5     6    2. 内嵌（内部）样式       ```html     <head>     \t<style type="text/css">     \t\t     \t</style>     </head>     ```       1     2     3     4     5    3. 行内样式       ```html     <p style="color: #F00;font-size:40px;">     \t飞雪连天射白鹿,笑书神侠倚碧鸳。     </p>     ```       1     2     3       ### [#](https://liujiaozhu666.github.io/posts/CSS.html#三种书写方式优先级) 三种书写方式优先级       行内样式 > 内部 > 外部样式    ## [#](https://liujiaozhu666.github.io/posts/CSS.html#css选择器) css选择器    1. 类选择器       ```html     <style>     .abc{     }     </style>          <div class="abc">     \tdiv标签     </div>          有class 那么选择器就要以 . 开头     class 的类名 可以重复使用     ```       1     2     3     4     5     6     7     8     9     10     11    2. ID选择器       ```html     <style>     #abc{     }     </style>          <div id="abc">     \tdiv标签     </div>          有id 那么选择器就要以 # 开头     id的类名 不可以重复使用     ```       1     2     3     4     5     6     7     8     9     10     11    3. 标签选择器       ```css     <style>     div{     }     </style>          <div>     \tdiv标签     </div>          标签是什么名字 那么选择器就要以什么 开头     ```       1     2     3     4     5     6     7     8     9     10       ## [#](https://liujiaozhu666.github.io/posts/CSS.html#选择器的优先级) 选择器的优先级       ID > Class > Tag（标签）       ------    ## [#](https://liujiaozhu666.github.io/posts/CSS.html#常用的css样式) 常用的CSS样式    ### [#](https://liujiaozhu666.github.io/posts/CSS.html#字体) 字体    | 样式名      | 值                                | 备注           |  | ----------- | --------------------------------- | -------------- |  | font-size   | 数字（单位px）                    | 设置字体大小   |  | font-family | 字符串 字体（当前计算机要有字体） | 设置字体的类型 |  | color       | 单词/16进制/rgb                   | 设置字体的颜色 |  | font-weight | 100-900 / bold                    | 设置字体的粗细 |    ### [#](https://liujiaozhu666.github.io/posts/CSS.html#文本) 文本    |     样式名      |                   值                    |                        备注                        |  | :-------------: | :-------------------------------------: | :------------------------------------------------: |  |   line-height   |                  数字                   | 设置行与行之间的距离(通常搭配height是文字垂直居中) |  |   text-align    |           left、center、right           |                 设置文本的对齐方式                 |  | letter-spacing  |              数字(单位px)               |              设置字体与字体之间的填充              |  | text-decoration | line-through、underline、overline、none |                设置字体的线如何显示                |    ## [#](https://liujiaozhu666.github.io/posts/CSS.html#盒子模型) 盒子模型    什么是盒子模型？    所有标签都是盒子    一个盒子的宽度 = 内容 + 外边距 + 边框线 + 内边距    盒子的宽度 = 内容 + padding-left +     brorder-left + margin-left +     padding-right + border-right +     margin-right;    ## [#](https://liujiaozhu666.github.io/posts/CSS.html#边框样式) 边框样式    ### [#](https://liujiaozhu666.github.io/posts/CSS.html#border) border    ```html  <style>      div{          /* 第一种写法 */          border:1px solid red;                    /* 第二种写法 */          border-width:2px;          border-color:red;          border-style:solid;                    /*第三种写法*/          border-top:2px solid red;                }  </style>    <div>      border  </div>  ```    1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19    ### [#](https://liujiaozhu666.github.io/posts/CSS.html#border-radius) border-radius    ```html  <style>      div{          border-radius:10px;                    border-top-left-radius: 50px;          border-bottom-right-radius: 50px;      }  </style>  <div></div>  ```    1  2  3  4  5  6  7  8  9  10    ### [#](https://liujiaozhu666.github.io/posts/CSS.html#边框线和边框圆角应用场景) 边框线和边框圆角应用场景    1. 按钮  2. 气泡效果（圆角+定位）    ## [#](https://liujiaozhu666.github.io/posts/CSS.html#列表样式) 列表样式    | list-style-type     | 列表类型       |  | ------------------- | -------------- |  | list-style-image    | 列表的图片     |  | list-style-position | 列表的位置     |  | list-style          | 列表类型的简写 |    ### [#](https://liujiaozhu666.github.io/posts/CSS.html#使用场景) 使用场景    1. 导航栏    ## [#](https://liujiaozhu666.github.io/posts/CSS.html#背景和阴影) 背景和阴影    | background-color    | **用于设置元素的背景颜色**       |  | ------------------- | -------------------------------- |  | background-image    | 用于设置元素的背景图片           |  | background-repeat   | 用于设置元素的背景图片重复方式   |  | background-position | 用于设置元素的背景图片位置       |  | background-size     | 用于设置元素的背景图片大小       |  | background          | 复合属性，用于设置元素的背景效果 |    #### [#](https://liujiaozhu666.github.io/posts/CSS.html#渐变) 渐变    ##### [#](https://liujiaozhu666.github.io/posts/CSS.html#线性渐变) 线性渐变    ##### [#](https://liujiaozhu666.github.io/posts/CSS.html#经性渐变) 经性渐变    ##### [#](https://liujiaozhu666.github.io/posts/CSS.html#重复性渐变) 重复性渐变    ------    #### [#](https://liujiaozhu666.github.io/posts/CSS.html#阴影) 阴影    ##### [#](https://liujiaozhu666.github.io/posts/CSS.html#文本阴影) 文本阴影    text-shadow: 上下，左右，模糊度，颜色    ##### [#](https://liujiaozhu666.github.io/posts/CSS.html#盒子阴影) 盒子阴影    box-shadow:上下，左右，模糊度，颜色    隐藏页面元素的方式    3种    1. overflow:hidden 超出 溢出 不占位置  2. display:none 显示方式不显示 不占位置  3. visibility: hidden 透明度 占位置'},{title:"Java Script",path:"/posts/4.js.html",strippedContent:" 2019.12.23 第十七周  周一  实训第一天  1.安装nodejs。  2.安装typora。  3.安装jquery。  4.注册github。（代码托管器）  5.学习github菜鸟教程。 http://www.runoob.com/git/git-tutorial.html  注：  1.ctrl+/是查看源代码  2.保存文件后缀名为.md。  3.代码符号输入后必须加空格        2019.12.24 第十七周 周二  实训第二天  1.安装Git。 （上传工具）  2.打开www.github.com，创建新的代码库，命名为：用户名+.github.io。  3.创建工作文件夹，在文件夹中右键打开Git Bash Hear，输入git clone+粘贴代码库地址。  4.在文件夹中创建index.html，并用记事本方式打开输入H5格式与内容  5.右键打开Git Bash Hear。  6.输入git status （粘贴本人地址）  7.输入git add . （检查状态）  8.输入git commit -m'(注释)'   （提交版本库）  9.输入git push  （上传）  10.上传邮件。  11.上传用户名。  12.复制新手教程。  13.输入账号密码。  14.刷新页面 出现上传文件。  15.复制  用户名+.github.io，打开新网页粘贴      2019.12.25  第十七周 周三  实训第三天  1.npm（外网下载）  2.cnpm  (非外网下载)  3.输入npm -v。  4.百度淘宝镜像，复制使用说明，粘贴至C盘跟目录cmd。  5.等待下载，下载完成在cmd中输入cnpm -v。  6.输入cnpm install -g @vue/cli。  7.输入vue -v。  8.输入cnpm i -g vuepress。  9.百度vuepress官网学习。  10.建立工作文件夹，命名用英文。  11.创建README.md文件。  12.cmd命令打开文件夹。  13.输入vurpress dev。  14.复制链接，打开浏览器    2019.12.26  第十七周  周四  实训第四天  1.创建文件夹，命名为vurpress。  2.右键打开Git Bash Hear。  3.百度liujiaozhu666.github.io。  4.点击页面最下方indigo material。  5.复制模板分支命令。、，粘贴至git。  6.运行init.sh。  7.后续运行在文件夹cmd中输入npm run dev。  8.复制链接百度打开。  9.修改方式：vue...->dose->.vuepress->cconfig.js。  10.可修改项：title，description，author，email，github。      2019.12.27  第十七周  周五  实训第五条  1.创建.md文件。  2.将文件拖入vurpress->docs->posts。  3.编辑.md文件：    ---  \ttitle：标题。  \tdate：时间。  \ttags：[类型]  ---  4.下一行开始输入内容。  5.在文件夹cmd中输入npm run dev。  6.复制链接百度打开。  7.在vue...->node_...->deploy.sh中，第一行！前加#注释，最下方20行（git push -f...）删除#，修改地址。  8.在文件夹cmd中输入npm run build，打包完成。  9.双击文件夹中的deploy.sh。  10.打开github官网查看是否打包上传成功。"}]}}]);